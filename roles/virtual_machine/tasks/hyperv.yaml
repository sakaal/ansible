# file: roles/virtual_machine/tasks/hyperv.yaml
---

- name: Let Hyper-V optimize disk I/O
  with_dict: "{{ ansible_devices }}"
  when: item.value.model == "Virtual Disk" and
        item.value.scheduler_mode != "noop"
  become: yes
  shell: echo noop > "/sys/block/{{ item.key }}/queue/scheduler"

- name: Check the current GRUB_CMDLINE_LINUX
  set_fact:
    grub_cmdline_entries: "{{
      lookup('ini',
             'GRUB_CMDLINE_LINUX type=properties file=/etc/default/grub'
             ).strip('\"').split() }}"

- name: Check the current GRUB_CMDLINE_LINUX elevator argument
  set_fact:
    grub_cmdline_elevator: "{{ grub_cmdline_entries |
                            select('match', 'elevator=.*') | list }}"

- name: Set the current GRUB_CMDLINE_LINUX elevator argument
  when: not 'elevator=noop' in grub_cmdline_elevator
  become: yes
  with_items:
  - key: 'GRUB_CMDLINE_LINUX'
    val: '"{{ grub_cmdline_entries | difference(grub_cmdline_elevator)
          | join(" ") }} elevator=noop"'
  lineinfile:
    path: '/etc/default/grub'
    regexp: '^{{ item.key }}=.*$'
    line: '{{ item.key }}={{ item.val }}'
  register: default_grub

- name: Find the current grub configuration file
  when: default_grub is changed
  become: yes
  find:
    path: "/boot"
    recurse: yes
    patterns: "grub.cfg"
    file_type: file
  register: grub_config

- name: Update the grub configuration
  when: default_grub is changed and
        grub_config.matched == 1
  become: yes
  command: grub2-mkconfig -o "{{ grub_config.files[0].path }}"

- name: Enable dynamic memory
  become: yes
  copy:
    dest: "/etc/udev/rules.d/100-balloon.rules"
    content: |
      SUBSYSTEM=="memory", ACTION=="add", ATTR{state}="online"

#
# RHEA-2014:1439
#

- name: Hyper-V guest packages (yum)
  when: ansible_pkg_mgr == "yum"
  with_items: "{{ hyperv_guest_packages }}"
  become: yes
  yum:
    name: "{{ item }}"

- name: Hyper-V guest packages (dnf)
  when: ansible_pkg_mgr == "dnf"
  with_items: "{{ hyperv_guest_packages }}"
  become: yes
  dnf:
    name: "{{ item }}"

- name: Enable the Hyper-V services
  with_items: "{{ hyperv_guest_services }}"
  become: yes
  service:
    name: "{{ item }}"
    enabled: yes
    state: started

- name: Check hypervfcopyd status
  when: ('hypervfcopyd' in hyperv_guest_services)
  command: systemctl status hypervfcopyd
  register: hypervfcopyd_status
  changed_when: hypervfcopyd_status.rc > 0
  failed_when: no

- name: How to enable the Guest Service Interface
  when: hypervfcopyd_status is changed
  debug:
    msg: >-
      Please check if the 'Guest Service Interface'
      integration service is enabled with the
      following PowerShell command on the Hyper-V server:
      Get-VMIntegrationService 'Guest Service Interface' -VMName {{ ansible_hostname }};
      where '{{ ansible_hostname }}' is the name of the VM.
      It can be enabled using the following PowerShell command:
      Enable-VMIntegrationService 'Guest Service Interface' -VMName {{ ansible_hostname }};
